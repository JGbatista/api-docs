swagger: '2.0'
host: api.zoop.ws
info:
  title: Objetos Base
  version: "1.1"

securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []

tags:
  - name: 'Vendedor'
    description: 'Pessoas ou empresas que vendem dentro do seu marketplace.'
  - name: 'Comprador'
    description: 'Pessoas ou empresas que compram dentro do seu marketplace'
  - name: 'Token'
    description: Token de cartões de crédito
  - name: 'Saldo de Conta'
    description: Saldo de conta zoop

schemes:
  - https

paths:
  '/v1/marketplaces/{marketplace_id}/sellers/{seller_id}/documents':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/sellerId'
    post:
      tags:
        - 'Vendedor'
      summary: Enviando documento para cadastro de vendedor
      description: ''
      operationId: addDocument
      consumes:
         - multipart/form-data
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - $ref: '#/parameters/sellerId'
        - name: file
          type: file
          in: formData
          required: true
          format: binary
          description: Documento que será cadastrado
        - name: category
          in: formData
          type: string
          required: true
          description: Categoria do documento cadastrado que podem assumir os seguintes domínios
                       identificacao, atividade, residencia e cnpj
        - name: metadata
          in: formData
          type: string
          description: Metadados associados ao documento
        - name: description
          in: formData
          type: string
          description: Descrição do documento
      responses:
        '201':
          description: Documento criado com sucesso
          schema:
            $ref: '#/definitions/Document'
        '404':
          description: 'Marketplace/Vendedor/Documento não encontrado'
    get:
      tags:
        - 'Vendedor'
      summary: Listar documentos de um vendedor
      description: ''
      operationId: findSellerDocument
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - $ref: '#/parameters/sellerId'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/sortParam'
        - $ref: '#/parameters/offsetParam'
        - $ref: '#/parameters/dateRangeParam'
        - $ref: '#/parameters/dateRangeGTParam'
        - $ref: '#/parameters/dateRangeGTEParam'
        - $ref: '#/parameters/dateRangeLTParam'
        - $ref: '#/parameters/dateRangeLTEParam'
      responses:
        '200':
          description: Documentos recuperados com sucesso
          schema:
            $ref: '#/definitions/Documents'
        '404':
          description: 'Marketplace/Vendedor não encontrado'
  '/v1/marketplaces/{marketplace_id}/sellers/documents/{id}':
    put:
      tags:
        - 'Vendedor'
      summary: Atualiza os dados de um documento de um vendedor
      description: ''
      operationId: updateDocument
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - name: id
          in: path
          description: ID do documento
          required: true
          type: string
        - in: body
          name: body
          description: Document object
          required: true
          schema:
            $ref: '#/definitions/Document'
      responses:
        '200':
          description: Documento alterado com sucesso
          schema:
            $ref: '#/definitions/Document'
        '404':
          description: 'Marketplace/Documento não encontrado'
  '/v1/marketplaces/{marketplace_id}/documents/{document_id}/file':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/documentId'
    get:
      tags:
        - 'Vendedor'
      summary: Download documentos de um vendedor pelo ID
      description: ''
      operationId: getSellerDocument
      responses:
        '200':
          description: Download de Imagem
          schema:
            $ref: '#/definitions/DocumentImage'
        '404':
          description: 'Marketplace/Vendedor não encontrado'
  '/v1/merchant_category_codes':
    get:
      tags:
        - 'Vendedor'
      summary: Listar MCCs (Merchant Category Codes)
      description: ''
      operationId: ''
      produces:
        - application/json
      responses:
        '200':
          description: Operação realizada com sucesso
          schema:
            example: {
                resource: "list",
                uri: "/v1/merchant_category_codes",
                items: [
                            {
                                id: "1",
                                code: "5300",
                                category: "Alimentação",
                                description: "Atacado",
                                resource: "merchant_category_code"
                            }
                        ],
                        has_more: true,
                        limit: 100,
                        total_pages: 2,
                        page: 1,
                        offset: 0,
                        total: "103"
              }
  '/v1/marketplaces/{marketplace_id}/sellers/individuals':
    post:
      tags:
        - 'Vendedor'
      summary: Criar novo vendedor do tipo indivíduo
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - in: body
          name: body
          description: Individual object
          required: true
          schema:
            $ref: '#/definitions/Individual'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor cadastrado com sucesso
          schema:
            $ref: '#/definitions/IndividualResponse'
        '404':
          description: 'Marketplace não encontrado'
        '400':
          description: 'Missing required param'
  '/v1/marketplaces/{marketplace_id}/sellers/individuals/{seller_id}':
    put:
      tags:
        - 'Vendedor'
      summary: Alterar um vendedor do tipo indivíduo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - $ref: '#/parameters/sellerId'
        - in: body
          name: body
          description: Individual object
          required: true
          schema:
            $ref: '#/definitions/IndividualAlterar'
      responses:
        '200':
          description: Vendedor alterado com sucesso
          schema:
            $ref: '#/definitions/IndividualResponse'
        '404':
          description: 'Marketplace não encontrado'
        '400':
          description: 'Missing required param'
  '/v1/marketplaces/{marketplace_id}/sellers/businesses':
    post:
      tags:
        - 'Vendedor'
      summary: Criar novo vendedor do tipo empresa
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - in: body
          name: body
          description: Individual object
          required: true
          schema:
            $ref: '#/definitions/Business'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '201':
          description: Vendedor cadastrado com sucesso
          schema:
            $ref: '#/definitions/BusinessesResponse'
        '404':
          description: 'Marketplace não encontrado'
        '400':
          description: 'Missing required param'
  '/v1/marketplaces/{marketplace_id}/sellers/businesses/{seller_id}':
    put:
      tags:
        - 'Vendedor'
      summary: Alterar um vendedor do tipo empresa
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId'
        - $ref: '#/parameters/sellerId'
        - in: body
          name: body
          description: Business object
          required: true
          schema:
            $ref: '#/definitions/BusinessAlterar'
      responses:
        '200':
          description: Vendedor alterado com sucesso
          schema:
            $ref: '#/definitions/BusinessResponse'
        '404':
          description: 'Marketplace/Vendedor não encontrado'
        '400':
          description: 'Missing required param'
  '/v1/marketplaces/{marketplace_id}/sellers/{seller_id}':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/sellerId'
    get:
      tags:
        - 'Vendedor'
      summary: Recupera detalhes de vendedor pelo id
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor recuperado com sucesso
          schema:
            $ref: '#/definitions/BusinessResponse'
        '404':
          description: 'Marketplace/Vendedor não encontrado'
    delete:
      tags:
        - 'Vendedor'
      summary: Deleta um de vendedor pelo id
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor deletado com sucesso
          schema:
            example:
              {
                'id': "17d9e827664b47509f12a082b6047e7a",
                'resource': 'seller',
                'type': 'individual',
                'deleted': true
              }
        '404':
          description: 'Marketplace/Vendedor não encontrado'
  '/v1/marketplaces/{marketplace_id}/sellers':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/limitParam'
      - $ref: '#/parameters/sortParam'
      - $ref: '#/parameters/offsetParam'
      - $ref: '#/parameters/dateRangeParam'
      - $ref: '#/parameters/dateRangeGTParam'
      - $ref: '#/parameters/dateRangeGTEParam'
      - $ref: '#/parameters/dateRangeLTParam'
      - $ref: '#/parameters/dateRangeLTEParam'
    get:
      tags:
        - 'Vendedor'
      summary: Listando vendedores
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor recuperado com sucesso
          schema:
            $ref: '#/definitions/BusinessesResponse'
        '404':
          description: 'Marketplace/Vendedor não encontrado'
  '/v1/marketplaces/{marketplace_id}/sellers/search':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - in: query
        name: taxpayer_id
        type: string    
        description: CPF do vendedor
      - in: query
        name: ein
        type: string
        description: CNPJ do vendedor
    get:
      tags:
        - 'Vendedor'
      summary: Buscar vendedor por CPF/CNPJ
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Vendedor encontrado com sucesso
          schema:
            $ref: '#/definitions/BusinessesResponse'
        '404':
          description: 'Vendedor não encontrado'
        '400':
          description: 'Missing required parameter'
  '/v1/marketplaces/{marketplace_id}/buyers':

    post:
      tags:
        - 'Comprador'
      summary: 'Criar comprador'
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/marketplaceId' 
        - in: body
          name: buyer data
          required: true
          schema:
           $ref: '#/definitions/BuyerRequest'
      responses:
        '200':
          description: Comprador criado com sucesso
          schema:
            $ref: "#/definitions/Buyer"
        '400':
          description: 'Missing required param'
        '404':
          description: Marketplace não encontrado
    get:
      tags:
        - 'Comprador'
      summary: 'Listando compradores'
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Comprador encontrado
        '404':
          description: Marketplace não encontrado
      parameters:
        - $ref: '#/parameters/marketplaceId'      
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/sortParam'
        - $ref: '#/parameters/offsetParam'
        - $ref: '#/parameters/dateRangeParam'
        - $ref: '#/parameters/dateRangeGTParam'
        - $ref: '#/parameters/dateRangeGTEParam'
        - $ref: '#/parameters/dateRangeLTParam'
        - $ref: '#/parameters/dateRangeLTEParam'      
  '/v1/marketplaces/{marketplace_id}/buyers/{buyer_id}':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/buyerId'
    put:
      tags:
        - 'Comprador'
      summary: 'Alterar detalhes de comprador'
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: buyer data
          required: true
          schema:
            $ref: '#/definitions/BuyerRequest'  
      responses:
        '200':
          description: Comprador alterado com sucesso
          schema:
            $ref: "#/definitions/Buyer"
        '400':
          description: 'Missing required param'
        '404':
          description: Marketplace/Buyer não encontrado
    get:
      tags:
        - 'Comprador'
      summary: 'Recuperar detalhes de comprador'
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Comprador alterado com sucesso
          schema:
            $ref: "#/definitions/Buyer"
        '404':
          description: Marketplace/Buyer não encontrado
    delete:
      tags:
        - 'Comprador'
      summary: 'Remover comprador pelo identificador'
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Comprador removido com sucesso
        '404':
          description: Marketplace/Buyer não encontrado
  '/v1/marketplaces/{marketplace_id}/buyers/search':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - in: query
        name: taxpayer_id
        type: string    
        description: CPF/CNPJ do comprador
        required:  true
    get:
      tags:
        - 'Comprador'
      summary: 'Buscar comprador por CPF/CNPJ'
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Comprador encontrado
        '404':
          description: Marketplace não encontrado
  '/v1/marketplaces/{marketplace_id}/sellers/{seller_id}/balances':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: seller_id
        in: path
        description: identificador do seller
        required: true
        type: string
    get:
      tags:
        - 'Saldo de Conta'
      summary: 'Recuperar saldo de conta por seller'
      description: 'Recupera o saldo corrente e saldo total de conta'
      produces:
        - application/json
      responses:
        '200':
          description: Saldo recuperado com sucesso
        '404':
          description: Marketplace/Seller não encontrado
  '/v1/marketplaces/{marketplace_id}/sellers/{seller_id}/balances/all':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: seller_id
        in: path
        description: identificador do seller
        required: true
        type: string
    get:
      tags:
        - 'Saldo de Conta'
      summary: 'Lista contas por seller'
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Saldo recuperado com sucesso
        '404':
          description: Marketplace/Seller não encontrado
  '/v1/marketplaces/{marketplace_id}/buyers/{buyer_id}/balances':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/buyerId'
    get:
      tags:
        - 'Saldo de Conta'
      summary: 'Lista contas por buyer'
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Saldo recuperado com sucesso
        '404':
          description: Marketplace/Buyer não encontrado
  '/v1/marketplaces/{marketplace_id}/balances/{balance_id}/history':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: balance_id
        in: path
        description: identificador da conta
        required: true
        type: string
    get:
      tags:
        - 'Saldo de Conta'
      summary: 'Listar histórico de lançamentos pelo identificador da conta'
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Histórico recuperado com sucesso
        '404':
          description: Marketplace/Saldo não encontrado

  '/v1/marketplaces/{marketplace_id}/sellers/{seller_id}/balances/history':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: seller_id
        in: path
        description: identificador do seller
        required: true
        type: string
      - $ref: '#/parameters/createdAtRangeGTEParam'
      - $ref: '#/parameters/createdAtRangeLTEParam'  
    get:
      tags:
        - 'Saldo de Conta'
      summary: 'Listar histórico de lançamentos de conta por seller'
      description: 'Listagem de histórico da conta principal do seller'
      produces:
        - application/json
      responses:
        '200':
          description: Histórico recuperado com sucesso
        '404':
          description: Marketplace/Seller não encontrado

  '/v1/marketplaces/{marketplace_id}/buyers/{buyer_id}/balances/history':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - $ref: '#/parameters/buyerId'
      - $ref: '#/parameters/createdAtRangeGTEParam'
      - $ref: '#/parameters/createdAtRangeLTEParam'
    get:
      tags:
        - 'Saldo de Conta'
      summary: 'Listar histórico de lançamentos de conta por buyer'
      description: 'Listagem de histórico da conta principal do buyer'
      produces:
        - application/json
      responses:
        '200':
          description: Histórico recuperado com sucesso
        '404':
          description: Marketplace/Seller não encontrado
  '/v1/marketplaces/{marketplace_id}/cards/tokens':
    parameters:
      - name: marketplace_id
        in: path
        description: ID do marketplace
        required: true
        type: string
    post:
      tags:
        - 'Token'
      summary: 'Criar novo token de cartão'
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: token data
          required: true
          schema:
            $ref: '#/definitions/TokenCardRequest'
      responses:
        '200':
          description: Token de cartão criado com sucesso
        '400':
          description: Requisição/Parâmetros invalidos
        '404':
          description: Marketplace/ não encontrado
  '/v1/marketplaces/{marketplace_id}/bank_accounts/tokens':
    parameters:
      - name: marketplace_id
        in: path
        description: ID do marketplace
        required: true
        type: string
    post:
      tags:
        - 'Token'
      summary: 'Criar novo token de conta bancária'
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Token de cartão criado com sucesso
        '400':
          description: Requisição/Parâmetros invalidos
        '404':
          description: Marketplace não encontrado
      parameters:
        - in: body
          name: token data
          required: true
          schema:
            $ref: '#/definitions/BankAccountRequest'
  '/v1/marketplaces/{marketplace_id}/tokens/{token_id}':
    parameters:
      - $ref: '#/parameters/marketplaceId'
      - name: token_id
        in: path
        description: identificador do token
        required: true
        type: string
    get:
      tags:
        - 'Token'
      summary: 'Recuperar detalhes de token de cartão/conta bancária'
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Token recuperado com sucesso
        '404':
          description: Marketplace/Token não encontrado
definitions:
  DocumentImage:
    type: array
    items:
      type: string
    example:
      - image/png,
      - image/bmp,
      - image/tiff,
      - image/jpeg,
      - image/gif,
      - application/pdf,
      - octet-stream,
      - application/octet-stream,
      - application/zip,
      - application/msword,
      - application/vnd.openxmlformats-officedocument.wordprocessingml.document
  Documents:
    type: object
    properties:
      resource:
        type: string
        example: "list"
      uri:
        type: string
        example: "/v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/sellers/582dcc754cef4e6e8ed3134067c2f76b/documents"
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        type: array
        items:
          $ref: '#/definitions/Document'
  Document:
    type: object
    properties:
      id:
        type: string
        example: 00dad23fae8b49638f6b897f6b7df5c2
      name:
        type: string
        example: 59d7d71a9b617.pdf
      status:
        type: string
        enum:
          - pending
          - uploaded
          - reviewving
          - action_required
          - approved
          - published
          - rejected
          - archived
          - deleted
        example: pending
      path:
        type: string
        example: https://static-assetss.s3.amazonaws.com/59d7d71a9b617.pdf
      extension:
        type: string
        example: pdf
      mime_type:
        type: string
        example: application/pdf
      size:
        type: integer
        example: 11401
      md5:
        type: string
        example: 02136adef2c29815d97902147069b23c
      description:
        type: string
        example: "documento de identificacao"
      category:
        type: string
        enum:
          - identification
          - address
          - activity
          - ein
        example: identification
      uploaded_by:
        type: object
        properties:
          id:
            type: string
            example: ab22b0c077e04099afa144d375cbf293
          resource:
            type: string
            enum:
              - seller
              - buyer
              - marketplace
            example: seller
          type:
            type: string
            enum:
              - individual
              - business
            example: individual
      uploaded_ip:
        type: string
      metadata:
        type: object
  Business:
    properties:
      fiscal_responsibility:
        type: string
        description: 'ID de vendedor responsável por receber os créditos pelas vendas'
      owner:
        type: object
        properties:
          first_name:
            type: string
            example: José
            description: 'Primeiro nome do proprietário'
          last_name:
            type: string
            example: Da Silva
            description: 'Último nome do proprietário'
          email:
            type: string
            example: teeste@teste.com
            description: 'Email do proprietário'
          phone_number:
            type: string
            example: " 12029579543"
            description: 'Número do telefone do proprietário'
          taxpayer_id:
            type: string
            example: "76537741807"
            description: 'CPF do proprietário'
          birthdate:
            type: string
            example: "1982-12-15"
            description: 'Data de nascimento do proprietário'
      description:
        type: string
        example: Descrição da empresa
        description: 'Descrição da empresa'
      business_name:
        type: string
        example: "Zoop Inc"
        description: 'Nome da empresa'
      business_phone:
        type: string
        example: "12026256754"
        description: 'Telefone da empresa'
      business_email:
        type: string
        example: "hello@pagzoop.com"
        description: 'Email da empresa'
      business_website:
        type: string
        example: "http://getzoop.com"
        description: 'Site da empresa'
      business_description:
        type: string
        example: "The open mobile payment platform"
        description: 'Descrição da empresa'
      business_facebook:
        type: string
        example: "http://fb.com/getzoop"
        description: 'Página do Facebook da empresa'
      business_twitter:
        type: string
        example: "http://twitter.com/getzoop"
        description: 'Página do Twitter da empresa'
      ein:
        type: string
        example: "24742492000159"
        description: 'CNPJ da empresa'
      statement_descriptor:
        type: string
        example: "NOME FANTASIA"
        description: Esse é o nome que aparece na fatura associado a transação. Importante ser fácil de reconhecer para evitar chargebacks.
      business_address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
            description: 'Rua'
          line2:
            type: string
            example: "543"
            description: 'Número'
          line3:
            type: string
            example: "APT 601"
            description: 'Complemento'
          neighborhood:
            type: string
            example: "Barra da Tijuca"
            description: 'Bairro/Distrito/Comunidade dentro de uma cidade'
          city:
            type: string
            example: "Rio de Janeiro"
            description: 'Cidade'
          state:
            type: string
            example: "RJ"
            description: 'Código ISO 3166-2 para o estado, com duas letras. Ex.: "MG","RJ","PR" '
          postal_code:
            type: string
            example: "10023000"
            description: 'CEP com 8 digitos sem separador'
          country_code:
            type: string
            example: "BR"
            description: 'ISO 3166-1 alpha-2 - códigos de país de duas letras. Valor padrão: "BR" '
      business_opening_date:
        type: string
        format: date
        example: "2015-04-17"
        description: 'Data de abertura da empresa'
      owner_address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
            description: 'Rua'
          line2:
            type: string
            example: "543"
            description: 'Número'
          line3:
            type: string
            example: "APT 601"
            description: 'Complemento'
          neighborhood:
            type: string
            example: "Barra da Tijuca"
            description: 'Bairro/Distrito/Comunidade dentro de uma cidade'
          city:
            type: string
            example: "Rio de Janeiro"
            description: 'Cidade'
          state:
            type: string
            example: "RJ"
            description: 'Código ISO 3166-2 para o estado, com duas letras. Ex.: "MG","RJ","PR" '
          postal_code:
            type: string
            example: "10023000"
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: "BR"
            description: 'ISO 3166-1 alpha-2 - códigos de país de duas letras. Valor padrão: "BR" '
      mcc:
        type: string
        example: "1"
        description: 'Envie o código de atividade do negócio (MCC ID). Ex.: "id": "1". A lista completa se encontra em /v1/merchant_category_codes'
      metadata:
        type: object
    required:
        - owner
        - ein
        - owner_address
        - business_address
        - mcc
        - business_name
        - business_phone
        - business_email
  BusinessAlterar:
    properties:
      owner:
        type: object
        properties:
          first_name:
            type: string
            example: José
            description: 'Primeiro nome do proprietário'
          last_name:
            type: string
            example: Da Silva
            description: 'Último nome do proprietário'
          email:
            type: string
            example: teeste@teste.com
            description: 'Email do proprietário'
          phone_number:
            type: string
            example: " 12029579543"
            description: 'Número do telefone do proprietário'
          birthdate:
            type: string
            example: "1982-12-15"
            description: 'Data de nascimento do proprietário'
      description:
        type: string
        example: Descrição da empresa
        description: 'Descrição da empresa'
      business_name:
        type: string
        example: "Zoop Inc"
        description: 'Nome da empresa'
      business_phone:
        type: string
        example: "12026256754"
        description: 'Telefone da empresa'
      business_email:
        type: string
        example: "hello@pagzoop.com"
        description: 'Email da empresa'
      business_website:
        type: string
        example: "http://getzoop.com"
        description: 'Site da empresa'
      business_description:
        type: string
        example: "The open mobile payment platform"
        description: 'Descrição da empresa'
      business_facebook:
        type: string
        example: "http://fb.com/getzoop"
        description: 'Página do Facebook da empresa'
      business_twitter:
        type: string
        example: "http://twitter.com/getzoop"
        description: 'Página do Twitter da empresa'
      statement_descriptor:
        type: string
        example: "NOME FANTASIA"
        description: Esse é o nome que aparece na fatura associado a transação. Importante ser fácil de reconhecer para evitar chargebacks.
      business_address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
            description: 'Rua'
          line2:
            type: string
            example: "543"
            description: 'Número'
          line3:
            type: string
            example: "APT 601"
            description: 'Complemento'
          neighborhood:
            type: string
            example: "Barra da Tijuca"
            description: 'Bairro/Distrito/Comunidade dentro de uma cidade'
          city:
            type: string
            example: "Rio de Janeiro"
            description: 'Cidade'
          state:
            type: string
            example: "RJ"
            description: 'Código ISO 3166-2 para o estado, com duas letras. Ex.: "MG","RJ","PR" '
          postal_code:
            type: string
            example: "10023000"
            description: 'CEP com 8 digitos sem separador'
          country_code:
            type: string
            example: "BR"
            description: 'ISO 3166-1 alpha-2 - códigos de país de duas letras. Valor padrão: "BR" '
      business_opening_date:
        type: string
        format: date
        example: "2015-04-17"
        description: 'Data de abertura da empresa'
      owner_address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
            description: 'Rua'
          line2:
            type: string
            example: "543"
            description: 'Número'
          line3:
            type: string
            example: "APT 601"
            description: 'Complemento'
          neighborhood:
            type: string
            example: "Barra da Tijuca"
            description: 'Bairro/Distrito/Comunidade dentro de uma cidade'
          city:
            type: string
            example: "Rio de Janeiro"
            description: 'Cidade'
          state:
            type: string
            example: "RJ"
            description: 'Código ISO 3166-2 para o estado, com duas letras. Ex.: "MG","RJ","PR" '
          postal_code:
            type: string
            example: "10023000"
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: "BR"
            description: 'ISO 3166-1 alpha-2 - códigos de país de duas letras. Valor padrão: "BR" '

  
  Individuals:
    properties:
      resource:
        type: string
        example: "list"
      uri:
        type: string
        example: "/v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/sellers"
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        type: array
        items:
          $ref: '#/definitions/Individual'
  Individual:
    properties:
      fiscal_responsibility:
        type: string
        description: 'ID de vendedor responsável por receber os créditos pelas vendas'
      first_name:
        type: string
        example: José
        description: 'Primeiro nome do vendedor'
      last_name:
        type: string
        example: Da Silva
        description: 'Último nome do vendedor'
      email:
        type: string
        example: teeste@teste.com
        description: 'Email do vendedor'
      phone_number:
        type: string
        example: " 12029579543"
        description: 'Número do telefone do vendedor'
      taxpayer_id:
        type: string
        example: "76537741807"
        description: 'CPF do vendedor'
      birthdate:
        type: string
        example: "1982-12-15"
        description: 'Data de nascimento do vendedor'
      statement_descriptor:
        type: string
        example: "NOME FANTASIA"
        description: 'Esse é o nome que aparece na fatura associado a transação. Importante ser fácil de reconhecer para evitar chargebacks.'
      description:
        type: string
        example:
        description: 'Descrição'
      address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
            description: 'Rua'
          line2:
            type: string
            example: "543"
            description: 'Número'
          line3:
            type: string
            example: "APT 601"
            description: 'Complemento'
          neighborhood:
            type: string
            example: "Downtown"
            description: 'Bairro/Distrito/Comunidade dentro de uma cidade'
          city:
            type: string
            example: "Rio de Janeiro"
            description: 'Cidade'
          state:
            type: string
            example: "RJ"
            description: 'Código ISO 3166-2 para o estado, com duas letras. Ex.: "MG","RJ","PR" '
          postal_code:
            type: string
            example: "10023"
            description: 'CEP com 8 digitos sem separador'
          country_code:
            type: string
            example: "BR"
            description: 'ISO 3166-1 alpha-2 - códigos de país de duas letras. Valor padrão: "BR" '
      mcc:
        type: string
        example: "1"
        description: 'Envie o código de atividade do negócio (MCC ID). Ex.: "id": "1". A lista completa se encontra em /v1/merchant_category_codes'
      metadata:
        type: object
        description: 'Mapeamento de chaves de string para valores de sequência de caracteres. key (Chave) é o identificador para os metadados (máximo de 30 caracteres). value (valor) é a informação a ser armazenada como metadados.'
    required:
      - first_name
      - last_name
      - email
      - phone_number
      - taxpayer_id
      - birthdate
      - address
      - mcc
  IndividualAlterar:
    properties:
      phone_number:
        type: string
        example: " 12029579543"
        description: 'Número do telefone do vendedor'
      statement_descriptor:
        type: string
        example: "NOME FANTASIA"
        description: 'Esse é o nome que aparece na fatura associado a transação. Importante ser fácil de reconhecer para evitar chargebacks.'
      description:
        type: string
        example:
        description: 'Descrição'
      address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
            description: 'Rua'
          line2:
            type: string
            example: "543"
            description: 'Número'
          line3:
            type: string
            example: "APT 601"
            description: 'Complemento'
          neighborhood:
            type: string
            example: "Downtown"
            description: 'Bairro/Distrito/Comunidade dentro de uma cidade'
          city:
            type: string
            example: "Rio de Janeiro"
            description: 'Cidade'
          state:
            type: string
            example: "RJ"
            description: 'Código ISO 3166-2 para o estado, com duas letras. Ex.: "MG","RJ","PR" '
          postal_code:
            type: string
            example: "10023"
            description: 'CEP com 8 digitos sem separador'
          country_code:
            type: string
            example: "BR"
            description: 'ISO 3166-1 alpha-2 - códigos de país de duas letras. Valor padrão: "BR" '
    required:
      - phone_number
      - address
  TokenCardRequest:
    type: object
    properties:
      holder_name:
        type: string
        description: Nome do portador
      expiration_month:
        type: string
        description: Mês de expiração do cartão (MM)
      expiration_year:
        type: string
        description: Ano de expiração do cartão (AAAA)
      card_number:
        type: string
        description: Número do cartão
      security_code:
        type: string
        description: Código de segurança do cartão (CVC)
    required:
      - holder_name
      - expiration_month
      - expiration_year
      - card_number
      - security_code
  BuyerRequest:
    type: object
    properties:
      first_name:
        type: string
        example: José
        description: 'Primeiro nome do comprador'
      last_name:
        type: string
        example: Da Silva
        description: 'Último nome do comprador'
      email:
        type: string
        example: teeste@teste.com
        description: 'Email do comprador'
      phone_number:
        type: string
        example: " 12029579543"
        description: 'Telefone do comprador'
      taxpayer_id:
        type: string
        example: "76537741807"
        description: 'CPF do comprador'
      birthdate:
        type: string
        example: "1982-12-15"
        description: 'Data de nascimento do comprador'
      description: 
        type: string
        example:
        description: 'Descrição'
      address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
            description: 'Rua'
          line2:
            type: string
            example: "543"
            description: 'Número'
          line3:
            type: string
            example: "APT 601"
            description: 'Complemento'
          neighborhood:
            type: string
            example: "Downtown"
            description: 'Bairro/Distrito/Comunidade dentro de uma cidade'
          city:
            type: string
            example: "Rio de Janeiro"
            description: 'Cidade'
          state:
            type: string
            example: "RJ"
            description: 'Código ISO 3166-2 para o estado, com duas letras. Ex.: "MG","RJ","PR" '
          postal_code:
            type: string
            example: "10023"
            description: 'CEP com 8 digitos sem separador'
          country_code:
            type: string
            example: "BR"
            description: 'ISO 3166-1 alpha-2 - códigos de país de duas letras. Valor padrão: "BR" '
    required:  
      - first_name
      - last_name
      - email
      - phone_number
      - taxpayer_id
      - birthdate
      - address
  Buyer:
    type: object
    properties:
      id:
        type: string
        example: d2385e3c49164e6195f072763c0a1eaa
      status:
        type: string
        enum:
          - new
          - expired
          - action_required
          - pending
          - enabled
          - active
          - disabled
          - deleted
        example: pending
      resource:
        type: string
        example: buyer
      account_balance:
        type: number
        example: 0.00
      current_balance:
        type: number
        example: 0.00
      first_name:
        type: string
        example: José
      last_name:
        type: string
        example: Da Silva
      email:
        type: string
        example: teeste@teste.com
      phone_number:
        type: string
        example: " 12029579543"
      taxpayer_id:
        type: string
        example: "76537741807"
      birthdate:
        type: string
        example: "1982-12-15"
      description:
        type: string
        example:
      address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
          line2:
            type: string
            example: "543"
          line3:
            type: string
            example: "APT 601"
          neighborhood:
            type: string
            example: "Downtown"
          city:
            type: string
            example: "Rio de Janeiro"
          state:
            type: string
            example: "RJ"
          postal_code:
            type: string
            example: "10023"
          country_code:
            type: string
            example: "US"
      delinquent:
        type: boolean
      default_debit:
        type: string
        description: 'cartão default para compras'
      default_credit:
        type: string
        description: 'conta bancaria default para depositios'
      metadata:
        type: object
      created_at:
        type: string
        format: dateTime
        example: "2015-04-17T06:39:52+00:00"
        description: 'W3C Datetime Format para a criação da data (yyyy-mm-ddThh:mm:ssZ)'
      updated_at:
        type: string
        format: dateTime
        example: "2015-04-17T06:39:52+00:00"
        description: 'W3C Datetime Format para a última atualização (yyyy-mm-ddThh:mm:ssZ)'
  BankAccountRequest:
    type: object
    properties:
      holder_name:
        type: string
        description: Nome do portador
      bank_code:
        type: number
        description: Código do banco
      routing_number:
        type: number
        description: Agencia sem DV (4 digitos)
      account_number:
        type: number
        description: Conta Bancaria com DV ( dígito verificador)
      taxpayer_id:
        type: string
        description: CPF, caso seller seja PF
      ein:
        type: string
        description: CNPJ, caso seller seja PJ
      type:
        type: string
        description: Conta corrente (checking) ou poupança (savings)
        enum:
          - checking
          - savings
    required:
      - holder_name
      - bank_code
      - routing_number
      - account_number
      - taxpayer_id
      - ein
      - type
  BusinessesResponse:
    type: object
    description: Seller
    properties:
      resource:
        type: string
        example: "list"
      uri:
        type: string
        example: "/v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/sellers"
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        type: array
        items:
          $ref: '#/definitions/BusinessResponse'
  BusinessResponse:
    type: object
    properties:
      id:
        type: string
        example: 17d9e827664b47509f12a082b6047e7a
        description: Identificador exclusivo para este vendedor
      status:
        type: string
        enum:
          - new
          - expired
          - action_required
          - pending
          - enabled
          - active
          - disabled
          - deleted
        example: pending
      resource:
        type: string
        example: seller
      type:
        type: string
        enum:
          - individual
          - business
        example: business
      account_balance:
        type: number
        example: 0.00
      current_balance:
        type: number
        example: 0.00
      fiscal_responsibility:
        type: string
        description: 'ID de vendedor responsável por receber os créditos pelas vendas'
      owner:
        type: object
        properties:
          first_name:
            type: string
            example: José
          last_name:
            type: string
            example: Da Silva
          email:
            type: string
            example: teeste@teste.com
          phone_number:
            type: string
            example: " 12029579543"
          taxpayer_id:
            type: string
            example: "76537741807"
          birthdate:
            type: string
            example: "1982-12-15"
      description:
        type: string
        example:
      business_name:
        type: string
        example: "Zoop Inc"
      business_phone:
        type: string
        example: "12026256754"
      business_email:
        type: string
        example: "hello@pagzoop.com"
      business_website:
        type: string
        example: "http://getzoop.com"
      business_description:
        type: string
        example: "The open mobile payment platform"
      business_facebook:
        type: string
        example: "http://fb.com/getzoop"
      business_twitter:
        type: string
        example: "http://twitter.com/getzoop"
      ein:
        type: string
        example: "24742492000159"
        description: 'CNPJ da empresa'
      statement_descriptor:
        type: string
        example: "NOME FANTASIA"
        description: Esse é o nome que aparece na fatura associado a transação. Importante ser fácil de reconhecer para evitar chargebacks.
      business_address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
          line2:
            type: string
            example: "543"
          line3:
            type: string
            example: "APT 601"
          neighborhood:
            type: string
            example: "Barra da Tijuca"
          city:
            type: string
            example: "Rio de Janeiro"
          state:
            type: string
            example: "RJ"
            description: Código ISO 3166-2 para o estado, com duas letras
          postal_code:
            type: string
            example: "10023000"
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: "BR"
            description: ISO 3166-1 alpha-2 - códigos de país de duas letras.
      business_opening_date:
        type: string
        format: date
        example: "2015-04-17"
      owner_address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
          line2:
            type: string
            example: "543"
          line3:
            type: string
            example: "APT 601"
          neighborhood:
            type: string
            example: "Barra da Tijuca"
          city:
            type: string
            example: "Rio de Janeiro"
          state:
            type: string
            example: "RJ"
          postal_code:
            type: string
            example: "10023000"
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: "BR"
      delinquent:
        type: boolean
      default_debit:
        type: string
        description: 'O método de pagamento padrão (cartão ou conta bancária) associado a um vendedor que será usado, por exemplo, para debitar a conta bancária ou cartão de crédito'
      default_credit:
        type: string
        description: 'O banco bancário padrão associado a um vendedor que será usado para enviar dinheiro (crédito) a conta bancária'
      mcc:
        type: string
        example: "1"
        description: Envie o código de atividade do negócio (MCC ID). A lista completa se encontra em /v1/merchant_category_codes
      metadata:
        type: object
      created_at:
        type: string
        format: dateTime
        example: "2015-04-17T06:39:52+00:00"
        description: 'W3C Datetime Format para a criação da data (yyyy-mm-ddThh:mm:ssZ)'
      updated_at:
        type: string
        format: dateTime
        example: "2015-04-17T06:39:52+00:00"
        description: 'W3C Datetime Format para a última atualização (yyyy-mm-ddThh:mm:ssZ)'
  IndividualsResponse:
    type: object
    properties:
      resource:
        type: string
        example: "list"
      uri:
        type: string
        example: "/v1/marketplaces/820a6bda73c546a8b2f12a5ebcae7732/sellers"
      limit:
        type: number
        example: 100
      offset:
        type: number
        example: 0
      has_more:
        type: boolean
        example: false
      query_count:
        type: number
        example: 2
      total:
        type: number
        example: 2
      items:
        type: array
        items:
          $ref: '#/definitions/IndividualResponse'
  IndividualResponse:
    type: object
    description: Estrutura padrão de um seller pessoa física
    properties:
      id:
        type: string
        example: 17d9e827664b47509f12a082b6047e7a
      status:
        type: string
        enum:
          - new
          - expired
          - action_required
          - pending
          - enabled
          - active
          - disabled
          - deleted
        example: pending
      resource:
        type: string
        example: seller
      type:
        type: string
        enum:
          - individual
          - business
        example: individual
      account_balance:
        type: number
        example: 0.00
      current_balance:
        type: number
        example: 0.00
      fiscal_responsibility:
        type: string
        description: 'ID de vendedor responsável por receber os créditos pelas vendas'
      first_name:
        type: string
        example: José
      last_name:
        type: string
        example: Da Silva
      email:
        type: string
        example: teeste@teste.com
      phone_number:
        type: string
        example: " 12029579543"
      taxpayer_id:
        type: string
        example: "76537741807"
        description: 'CPF do vendedor'
      birthdate:
        type: string
        example: "1982-12-15"
      statement_descriptor:
        type: string
        example: "NOME FANTASIA"
      description:
        type: string
        example:
      address:
        type: object
        properties:
          line1:
            type: string
            example: "167 West 74th Street"
          line2:
            type: string
            example: "543"
          line3:
            type: string
            example: "APT 601"
          neighborhood:
            type: string
            example: "Barra da Tijuca"
          city:
            type: string
            example: "Rio de Janeiro"
          state:
            type: string
            example: "RJ"
            description: Código ISO 3166-2 para o estado, com duas letras
          postal_code:
            type: string
            example: "10023000"
            description: CEP com 8 digitos sem separador
          country_code:
            type: string
            example: "BR"
            description: ISO 3166-1 alpha-2 - códigos de país de duas letras.
      delinquent:
        type: boolean
      default_debit:
        type: string
        description: 'cartão default para compras'
      default_credit:
        type: string
        description: 'conta bancaria default para depositios'
      mcc:
        type: string
        example: "1"
        description: Envie o código de atividade do negócio (MCC ID). A lista completa se encontra em /v1/merchant_category_codes
      metadata:
        type: object
      created_at:
        type: string
        format: dateTime
        example: "2015-04-17T06:39:52+00:00"
        description: 'W3C Datetime Format para a criação da data (yyyy-mm-ddThh:mm:ssZ)'
      updated_at:
        type: string
        format: dateTime
        example: "2015-04-17T06:39:52+00:00"
        description: 'W3C Datetime Format para a última atualização (yyyy-mm-ddThh:mm:ssZ)'
parameters:
  marketplaceId:
    name: marketplace_id
    in: path
    description: ID do marketplace
    required: true
    type: string
  sellerId:
    name: seller_id
    in: path
    description: ID do Seller
    required: true
    type: string
  buyerId:
    name: buyer_id
    in: path
    description: identificador do comprador
    required: true
    type: string
  documentId:
    name: document_id
    in: path
    description: ID do documento
    required: true
    type: string  
  limitParam:
    name: limit
    in: query
    description: Limita o número de objetos retornados, podendo ser entre 1 e 100
    required: false
    type: number
    format: int32
    default: 20
  sortParam:
    name: sort
    in: query
    description: Determinar como ordenar a lista em relação a data de criação do objeto
    required: false
    type: string
    enum:
      - time-descending
      - time-ascending
    default: time-descending
  offsetParam:
    name: offset
    in: query
    description: Determina o ponto de inicio dos registros retornados
    required: false
    type: number
    format: int32
    default: 0
  dateRangeParam:
    name: date_range
    in: query
    description: Filtro na lista base de objetos pela data de criação. O valor pode ser uma string com um horário em UTC timestamp, ou pode ser uma lista com os parametros abaixo
    required: false
    type: number
  dateRangeGTParam:
    name: date_range[gt]
    in: query
    description: Retorna valores onde a data maior que o timestamp informado
    required: false
    type: number
  dateRangeGTEParam:
    name: date_range[gte]
    in: query
    description: Retorna valores onde a data for maior ou igual que o timestamp informado
    required: false
    type: number
  dateRangeLTParam:
    name: date_range[lt]
    in: query
    description: Retorna valores onde a data for menor que o timestamp informado
    required: false
    type: number
  dateRangeLTEParam:
    name: date_range[lte]
    in: query
    description: Retorna valores onde a data for menor ou igual que o timestamp informado
    required: false
    type: number
  createdAtRangeGTEParam: 
    name: created_at_range[gte]
    in: query
    description: Retorna valores onde a data for maior ou igual que o timestamp informado
    required: false
    type: number
  createdAtRangeLTEParam: 
    name: created_at_range[lte]
    in: query
    description: Retorna valores onde a data for menor ou igual que o timestamp informado
    required: false
    type: number

