openapi: 3.0.2
info:
  title: Criação de contas
  version: "1.1"

security:
 - basicAuth: []

tags:
 - name: Criação de contas
   description: Credenciamento e criação de contas 

servers: [
    {
      "url": "https://api-beta.zoop.ws",
      "description": "Produção"
    },
    {
      "url": "https://apigw-sandbox.zoop.ws",
      "description": "Sandbox"
    }    
    ]
    
paths:
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders":
    post:
      summary: Cadastro portador
      description: (Option 1) - Pessoa física / (Option 2) - Pessoa jurídica
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf: 
                - $ref: '#/components/schemas/IndividualHolderRequest'
                - $ref: '#/components/schemas/BusinessHolderRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IndividualHolderResponse'
                  - $ref: '#/components/schemas/BusinessHolderResponse'
    get:
      summary: Consultar portadores do marketplace
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/HolderResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}":
    put:
      summary: Alterar portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/IndividualHolderRequestPut'
                - $ref: '#/components/schemas/BusinessHolderRequestPut'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IndividualHolderResponse'
                  - $ref: '#/components/schemas/BusinessHolderResponse'
    get:
      summary: Consultar portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                  $ref: '#/components/schemas/IndividualHolderResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/phones":
    post:
      summary: Cadastrar telefone do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhonesHolderRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesHolderResponse'
    get:
      summary: Consultar telefone do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesHoldersResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/phones/{phone_id}":
    put:
      summary: Alterar telefone do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/phoneID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhonesHolderRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesHolderResponse'
    delete:
      summary: Apagar telefone do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/phoneID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Phone removed successfully"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound404"
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound412"
        '500':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound500"
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/addresses":
    post:
      summary: Cadastrar endereço do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressHolderRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHolderRequest'
    get:
      summary: Consultar endereço do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHoldersResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/addresses/{address_id}":
    get:
      summary: Consulta endereço do portador por ID 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/adressID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHolderResponse'
    put:
      summary: Alterar endereço do portador por ID 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/adressID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressHolderRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHolderResponse'
    delete:
      summary: Apagar endereço do portador por ID 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/adressID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Address removed successfully"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound404"
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound412"
        '500':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound500"
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/documents":
    post:
      summary: Cadastrar documento do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/type"
      requestBody:
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsHolderResponse'
    get:
      summary: Consulta documentação do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/type"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/documents/{documents_id}":
    get:
      summary: Consultar endereço do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/documentID"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsHolderResponse'
    delete:
      summary: Apagar endereço do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/documentID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Document  removed successfully"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound404"
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound412"
        '500':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound500"
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/approval":
    post:
      summary: Cadastrar endereço do portador 
      tags:
        - Credenciamento portador
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      responses:
        '202':
          description: Accepted 
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Approval request accepted successfully. Processing analysis"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "not_found"
                  type:
                    type: string
                    example: "not_found"
                  message:
                    type: string
                    example: "Holder not found"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 404
        '411':
          description: Length Required
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "pre_condition_failed"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Missing documents"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 411
                  documents:
                    type: string
                    example: "[Document type CCMEI is missing for holder 490f6c7c2b0b4046b3ec023c80923c0e,
      Document type SELFIE is missing for partner e6c915d443ec434db41b64c122afd9a7]"
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "pre_condition_failed"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Holder already approved."
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 412
        '500':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "internal_server_error"
                  type:
                    type: string
                    example: "server_error"
                  message:
                    type: string
                    example: "Intenal Server Error"
                  category:
                    type: string
                    example: "unexpected"
                  status_code:
                    type: number
                    example: 500
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/partners":
    post:
      summary: Cadastrar sócio (somente tipo PJ) 
      tags:
        - Credenciamento sócio
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/IndividualHolderPartnerRequest'
                - $ref: '#/components/schemas/BusinessHolderPartnerRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IndividualHolderPartnerResponse'
                  - $ref: '#/components/schemas/BusinessHolderPartnerResponse'
    get:
      summary: Consultar sócio (somente tipo PJ) 
      tags:
        - Credenciamento sócio
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/pageID"
        - $ref: "#/components/parameters/sizeID"
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                  $ref: '#/components/schemas/PartnerResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/partners/{partner_id}":
    get:
      summary: Consultar sócio por ID 
      tags:
        - Credenciamento sócio
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/partnerID"
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                  $ref: '#/components/schemas/IndividualHolderPartnerResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/partners/{partner_id}/phones":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/holderID"
      - $ref: "#/components/parameters/partnerID"
    post:
      summary: Cadastrar telefone do socio 
      tags:
        - Credenciamento sócio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhonesHolderRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesPartnerResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
    get:
      summary: Consultar telefones do sócio 
      tags:
        - Credenciamento sócio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                   _embedded:
                     type: object
                     properties:
                       phones:
                         type: array
                         items:
                           $ref: '#/components/schemas/PhonesPartnerResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/partners/{partner_id}/phones/{phone_id}":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/holderID"
      - $ref: "#/components/parameters/partnerID"
      - $ref: "#/components/parameters/phoneID"
    put:
      summary: Alterar telefone do sócio por ID 
      tags:
        - Credenciamento sócio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhonesHolderRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesPartnerResponse'
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesPartnerResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "bad_request"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Validation field error"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 400
                  fields:
                    type: object
                    properties:
                      state: 
                        type: string
                        example: "Number is required"
                      posta_code: 
                        type: string
                        example: "Country code must have only number characters"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
    get:
      summary: Consultar telefone do sócio 
      tags:
        - Credenciamento sócio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesPartnerResponse'
        '201':
          description: Created - Payload de um telefone secundário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesPartnerResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
    delete:
      summary: Apagar telefone do sócio por ID 
      tags:
        - Credenciamento sócio
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/adressID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Phone removed successfully"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound404"
        '412':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "pre_condition_failed"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "At least one phone must be remaining"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 412
        '500':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageNotFound500"
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/partners/{partner_id}/addresses":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/holderID"
      - $ref: "#/components/parameters/partnerID"
    post:
      summary: Cadastrar endereço do socio 
      tags:
        - Credenciamento sócio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressHolderRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHolderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
    get:
      summary: Consultar telefone do sócio 
      tags:
        - Credenciamento sócio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                   _embedded:
                     type: object
                     properties:
                       phones:
                         type: array
                         items:
                           $ref: '#/components/schemas/AddressHolderResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/partners/{partner_id}/addresses/{address_id}":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/holderID"
      - $ref: "#/components/parameters/partnerID"
      - $ref: "#/components/parameters/adressID"
    put:
      summary: Alterar endereço do sócio por ID 
      tags:
        - Credenciamento sócio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressHolderRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHolderResponse'
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHolderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "bad_request"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Validation field error"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 400
                  fields:
                    type: object
                    properties:
                      state: 
                        type: string
                        example: "State is required"
                      posta_code: 
                        type: string
                        example: "Postal code must have only number characters"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
    get:
      summary: Consultar endereço do sócio por ID 
      tags:
        - Credenciamento sócio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressHolderResponse'
        '201':
          description: Created - Payload de um endereço secundário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhonesPartnerResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
    delete:
      summary: Apagar endereço do sócio por ID 
      tags:
        - Credenciamento sócio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Address removed successfully"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "not_found"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Address not found"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 404
        '412':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "pre_condition_failed"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "At least one address must be remaining"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 412
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/partners/{partner_id}/documents":
    parameters:
      - $ref: "#/components/parameters/type"
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/holderID"
      - $ref: "#/components/parameters/partnerID"
    post:
      summary: Cadastrar endereço do socio 
      tags:
        - Credenciamento sócio
      requestBody:
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsHolderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "bad_request"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Validation document format"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '412':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "pre_condition_failed"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "It is not possible to add documents to the partner due to the holder status. Contact support to make this request."
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 412
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
    get:
      summary: Consultar telefone do sócio 
      tags:
        - Credenciamento sócio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                   _embedded:
                     type: object
                     properties:
                       phones:
                         type: array
                         items:
                           $ref: '#/components/schemas/PhonesPartnerResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/holders/{holder_id}/partners/{partner_id}/documents/{documents_id}":
    parameters:
      - $ref: "#/components/parameters/type"
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/holderID"
      - $ref: "#/components/parameters/partnerID"
      - $ref: "#/components/parameters/documentID"
    get:
      summary: Consultar documentos do sócio por ID 
      tags:
        - Credenciamento sócio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsPartnerResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
    delete:
      summary: Apagar documentos do sócio por ID 
      tags:
        - Credenciamento sócio
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Document removed successfully"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "bad_request"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Invalid document owner"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 400
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "not_found"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Document not found"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 404
        '412':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "pre_condition_failed"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "It is not possible to add documents to the partner due to the holder status. Contact support to make this request."
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 412
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound500'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/cbos":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/pageID"
      - $ref: "#/components/parameters/sizeID"
    get:
      summary: Consultar CBO 
      tags:
        - Informações complementares
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/IndividualHolderResponse'
  "/v2/marketplaces/{marketplace_id}/banking/accreditation/cnaes":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/pageID"
      - $ref: "#/components/parameters/sizeID"
    get:
      summary: Consultar CNAEs 
      tags:
        - Informações complementares
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/IndividualHolderResponse'
  "/v2/marketplaces/{marketplace_id}/holders/{holder_id}/accounts":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/holderID"
    post:
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
      summary: Criação de conta digital 
      tags:
        - Contas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalAccountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "bad_request"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Invalid JSON"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 400
    get:
      parameters:
        - $ref: "#/components/parameters/marketplaceID"
        - $ref: "#/components/parameters/holderID"
        - $ref: "#/components/parameters/limitID"
        - $ref: "#/components/parameters/offsetID"
      summary: Consultar contas do portador 
      tags:
        - Contas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DigitalAccountResponse'
                  page: 
                    type: object
                    properties:
                      has_more:
                        type: boolean
                        example: true
                      limit:
                        type: number
                        example: 1
                      total_pages:
                        type: number
                        example: 100
                      page:
                        type: number
                        example: 0
                      offset:
                        type: number
                        example: 0
                      total:
                        type: number
                        example: 150
                      query_count:
                        type: number
                        example: 150
  "/v2/marketplaces/{marketplace_id}/accounts":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/offsetID"
      - $ref: "#/components/parameters/limitID"
    get:
      summary: Listagem de contas digitais do marketplace
      tags:
        - Contas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DigitalAccountResponse'
                  page: 
                    type: object
                    properties:
                      has_more:
                        type: boolean
                        example: true
                      limit:
                        type: number
                        example: 1
                      total_pages:
                        type: number
                        example: 100
                      page:
                        type: number
                        example: 0
                      offset:
                        type: number
                        example: 0
                      total:
                        type: number
                        example: 150
                      query_count:
                        type: number
                        example: 150
  "/v2/marketplaces/{marketplace_id}/accounts/{account_id}":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/accountID"
    get:
      summary: Recuperar detalhes de uma conta digital 
      tags:
        - Contas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalAccountResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "not_found"
                  type:
                    type: string
                    example: "invalid_request"
                  message:
                    type: string
                    example: "Account with status active and id 0162893710a6495e86542eeff192baa1 not found in marketplace ceaeaa4a-f6d6-4d2d-a22a-da2944ceead6"
                  category:
                    type: string
                    example: "business"
                  status_code:
                    type: number
                    example: 404
  "/v2/marketplaces/{marketplace_id}/accounts/{account_id}/operations":
    parameters:
      - $ref: "#/components/parameters/marketplaceID"
      - $ref: "#/components/parameters/accountID"
      - $ref: "#/components/parameters/typeOpID"
      - $ref: "#/components/parameters/created_date_rangeID"
      - $ref: "#/components/parameters/created_date_rangeGTID"
      - $ref: "#/components/parameters/created_date_rangeLTID"
      - $ref: "#/components/parameters/created_date_rangeGTEID"
      - $ref: "#/components/parameters/created_date_rangeLTEID"
      - $ref: "#/components/parameters/offsetID"
      - $ref: "#/components/parameters/limitID"
    get:
      summary: Extrato de operações por conta 
      tags:
        - Contas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  resource:
                    type: string
                    example: "list"
                  uri:
                    type: string
                    example: "/v2/marketplaces/303102c1161c450f94d72b30f9903f89/accounts/496a00f3ab5b4fe7ac8351d449e5fd1f/operations"
                  items:
                    type: object
                    properties:
                      20209-08-14:
                        type: array
                        items: 
                          $ref: '#/components/schemas/BalanceAccountResponse'
                      
                  has_more:
                    type: boolean
                    example: false
                  limit:
                    type: number
                    example: 1
                  total_pages:
                    type: number
                    example: 1
                  page:
                    type: number
                    example: 1
                  offset:
                    type: number
                    example: 0
                  total:
                    type: number
                    example: 1
                  query_count:
                    type: number
                    example: 1


components:
  securitySchemes:
     basicAuth:
       type: http
       scheme: basic 
  parameters:
      marketplaceID:
        name: marketplace_id
        in: path
        description: ID do marketplace
        required: true
        schema:
          type: string
      holderID:
        name: holder_id
        in: path
        description: ID do holder (dono da conta)
        required: true
        schema:
          type: string
      partnerID:
        name: partner_id
        in: path
        description: ID do sócio 
        required: true
        schema:
          type: string
      accountID:
        name: account_id
        in: path
        description: ID da conta digital 
        required: true
        schema:
          type: string
      phoneID:
        name: phone_id
        in: path
        description: ID do telefone 
        required: true
        schema:
          type: string
      type:
        name: type_id
        in: query
        description: Tipo do arquivo a ser enviado
        required: true
        schema:
          type: string
          enum:
            - SELFIE
            - RG_FRENTE
            - RG_VERSO
            - CNH_FRENTE
            - CNH-VERSO
            - CCMEI
            - PAGINA_CONTRATO_SOCIAL
            - PAGINA_ESTATUTO_SOCIAL
            - PAGINA_ATA_ELEICAO_DIRETORES
            - PAGINA_PROCURACAO
      documentID:
        name: documents_id
        in: path
        description: ID do documento
        required: true
        schema:
          type: string
      adressID:
        name: address_id
        in: path
        description: ID do endereço
        required: true
        schema:
          type: string
      pageID:
        name: page_id
        in: query
        description: indica a página que será exibida
        schema:
          type: number
          example: 0
      sizeID:
        name: size_id
        in: query
        description: Quantidade de registros a ser retornado por página
        schema:
          type: number
          example: 20
      offsetID:
        name: offset
        in: query
        description: Determina o ponto de inicio dos registros retornados
        schema:
          type: number
          example: 0
      limitID:
        name: limit
        in: query
        description: Quantidade máxima de itens por página (<100)
        schema:
          type: number
          example: 0
      typeOpID:
        name: type
        in: query
        description: "Retorna lançamentos onde o tipo da operação seja igual a um dos valores informado. O valor pode ser uma string ou uma lista de valores concatenados por ', '. (ex: charge, charge_refunded, transfer, transfer_refunded, deposit, deposit_refunded, adjustment)"
        required: true
        schema:
          type: string
          enum:
            - charge
            - charge_refunded
            - transfer
            - transfer_refunded
            - deposit
            - deposit_refunded
            - adjustment
      created_date_rangeID:
        name: created_date_range
        in: query
        description: Retorna lançamentos onde a data for igual o valor informado. O valor pode ser uma string com um horário em UTC timestamp ou ISO (YYYY-DD-MM HH:MM:SS)
        schema:
          type: string
          example: "2020-10-01 15:34:00"
      created_date_rangeGTID:
        name: created_date_range[gt]
        in: query
        description: Retorna lançamentos onde a data for maior o valor informado
        schema:
          type: string
          example: "2020-10-01 15:34:00"
      created_date_rangeLTID:
        name: created_date_range[lt]
        in: query
        description: Retorna lançamentos onde a data for menor o valor informado
        schema:
          type: string
          example: "2020-10-01 15:34:00"
      created_date_rangeGTEID:
        name: created_date_range[gte]
        in: query
        description: Retorna lançamentos onde a data for maior ou igual o valor informado
        schema:
          type: string
          example: "2020-10-01 15:34:00"
      created_date_rangeLTEID:
        name: created_date_range[lte]
        in: query
        description: Retorna lançamentos onde a data for menor ou igual valor informado
        schema:
          type: string
          example: "2020-10-01 15:34:00"

  schemas:
    IndividualHolderResponse:
      type: object
      properties:
        id:
          type: string
          example: "85b006901d034e18a235bd995b0d6352"
        name:
          type: string
          example: "João Silva"
        revenue:
          type: number
          format: double
          example: 5500.50
        email:
          type: string
          example: "joao.silva@gmail.com"
        status:
          type: string
          example: waiting_info_and_documents
        marketplace_id:
          type: string
          example: "f8c2bfb884e4486c8e0eee15be5c3ab1"
        marketplace_name:
          type: string
          example: "Marketplace Integração Testes Banking"
        created_at:
          type: string
          example: "2020-11-05T11:35:32.038494"
        updated_at:
          type: string
          example: "2020-11-05T11:35:32.038497"
        type:
          type: string
          example: individual
        nationalRegistration:
          type: string
          example: "10057698007"
        birthday:
          type: string
          example: "1982-12-15"
        mothers_name:
          type: string
          example: "Maria da Silva"
        identity_card:
          type: string
          example: "156032898"
        pep:
          type: string
          example: "false"
        cbo:
          type: string
          example: "252505"
        _links:
          $ref: '#/components/schemas/Links'
    BusinessHolderResponse:
      type: object
      properties:
        id:
          type: string
          example: "85b006901d034e18a235bd995b0d6352"
        name:
          type: string
          example: "João Silva"
        revenue:
          type: number
          format: double
          example: 5500.50
        email:
          type: string
          example: "joao.silva@gmail.com"
        status:
          type: string
          example: waiting_info_and_documents
        marketplace_id:
          type: string
          example: "f8c2bfb884e4486c8e0eee15be5c3ab1"
        marketplace_name:
          type: string
          example: "Marketplace Integração Testes Banking"
        created_at:
          type: string
          example: "2020-11-05T11:35:32.038494"
        updated_at:
          type: string
          example: "2020-11-05T11:35:32.038497"
        type:
          type: string
          example: individual
        nationalRegistration:
          type: string
          example: "10057698007"
        birthday:
          type: string
          example: "1982-12-15"
        mothers_name:
          type: string
          example: "Maria da Silva"
        identity_card:
          type: string
          example: "156032898"
        pep:
          type: string
          example: "false"
        cbo:
          type: string
          example: "252505"
        cnae:
          type: string
          description: Código de classificação nacional de atividades econômicas
          example: "0111301"
        legal_name:
          type: string
          description: Razão social da empresa (somente tipo business)
          example: "Teste Comercio de Alimentos Ltda." 
        establishment:
          type: object
          properties:
            format: 
              type: string
              example: "LTDA"
            date:
              type: string
              example: "2001-03-05"     
        _links:
           $ref: '#/components/schemas/Links'
    IndividualHolderRequest:
      required:
        - cbo
        - email
        - name
        - revenue
        - type
        - mothers_name
        - national_registration
      type: object
      properties:
        type:
          type: string
          example: "individual"
          description: Tipo do portador da conta. Para um holder pessoa física o valor deve ser sempre individual 
        name:
          type: string
          description: Nome completo do portador da conta.
          example: "João da Silva" 
        email:
          type: string
          description: email do portador da conta.
          example: "joao.silva@gmail.com" 
        birthday:
          type: string
          description: Data de nascimento do portador da conta.
          example: "1982-12-15" 
        identity_card:
          type: string
          description: RG do portador da conta (Somente para type "individual") 
          example: 156032898
        national_registration:
          type: string
          description: CPF do portador da conta.
          example: "10057698007" 
        cbo:
          type: string
          description: Código de ocupação do portador da conta. Valor disponível em Listar CBO (Somente para type "individual")
          example: "252505"
        pep:
          type: boolean
          default: false
          description: Declaração se o portador da conta é uma pessoa exposta politicamente. 
        mothers_name:
          type: string
          description: Nome da mãe do portador da conta 
          example: "Maria Silva"
        revenue:
          type: number
          description: Renda média do portador (tipo individual) da conta ou receita média da empresa (tipo business) 
          format: double
          example: "5500.00" 
    BusinessHolderRequest:
      required:
        - cbo
        - email
        - name
        - revenue
        - type
        - mothers_name
        - national_registration
      type: object
      properties:
        type:
          type: string
          example: business
          description: Tipo do portador da conta. Para um holder pessoa física o valor deve ser sempre individual 
        name:
          type: string
          description: Nome completo do portador da conta.
          example: "João da Silva" 
        email:
          type: string
          description: email do portador da conta.
          example: "joao.silva@gmail.com" 
        birthday:
          type: string
          description: Data de nascimento do portador da conta.
          example: "1982-12-15" 
        identity_card:
          type: string
          description: RG do portador da conta (Somente para type "individual") 
          example: 156032898
        national_registration:
          type: string
          description: CPF do portador da conta.
          example: "10057698007" 
        cbo:
          type: string
          description: Código de ocupação do portador da conta. Valor disponível em Listar CBO (Somente para type "individual")
          example: "252505"
        pep:
          type: boolean
          default: false
          description: Declaração se o portador da conta é uma pessoa exposta politicamente. 
        mothers_name:
          type: string
          description: Nome da mãe do portador da conta 
          example: "Maria Silva"
        revenue:
          type: number
          description: Renda média do portador (tipo individual) da conta ou receita média da empresa (tipo business) 
          format: double
          example: "5500.00" 
        cnae:
          type: string
          description: Código de classificação nacional de atividades econômicas
          example: "0111301"
        legal_name:
          type: string
          description: Razão social da empresa (somente tipo business)
          example: "Teste Comercio de Alimentos Ltda." 
        establishment:
          type: object
          properties:
            format: 
              type: string
              description: "Formato de constituição da empresa. Valores possíveis: SS (Sociedade Simples), SC (Sociedade Cooperativa), SPE (Sociedade de Propósito Especifico), LTDA (Sociedade Limitada), SA (Sociedade por Ações), ME (Micro empresa) , MEI (Microempreendedor individual), EI (Empresário individual), EIRELI (Empresário Individual de Responsabilidade Limitada) , SNC (Sociedade em Nome Coletivo), SCS (Sociedade em Comandita Simples), SCA (Sociedade em Comandita por Ações (somente tipo business)"
              example: "LTDA"
            date:
              type: string
              description: Data de constituição da empresa (somente tipo business)
              example: "2001-03-05"     
    IndividualHolderRequestPut:
      type: object
      properties:
        birthday:
          type: string
          description: Data de nascimento do portador da conta.
          example: "1982-12-15" 
        cbo:
          type: string
          description: Código de ocupação do portador da conta. Valor disponível em Listar CBO
          example: "252505"
        mothers_name:
          type: string
          description: Nome da mãe do portador da conta 
          example: "Maria Silva"
        revenue:
          type: number
          description: Renda média do portador da conta
          format: double
          example: "5500.00" 
    BusinessHolderRequestPut:
      type: object
      properties:
        mothers_name:
          type: string
          description: Nome da mãe do portador da conta 
          example: "Maria Silva"
        revenue:
          type: number
          description: Renda média do portador da conta
          format: double
          example: "5500.00" 
        cnae:
          type: string
          description: Código de classificação nacional de atividades econômicas
          example: "0111301"
        establishment:
          type: object
          properties:
            date:
              type: string
              description: Data de constituição da empresa (somente tipo business)
              example: "2001-03-05"     
    PhonesHolderRequest:
      required:
        - area_code
        - country_code
        - number
      type: object
      properties:
        area_code:
          type: string
          example: "21"
          description: Código da área do telefone (DD) 
        country_code:
          type: string
          description: Código do país do telefone (DDI)
          example: "55" 
        number:
          type: string
          description: Número do telefone.
          example: "33093829" 
    PhonesHolderResponse:
      type: object
      properties:
        id:
          type: string
          example: "85b006901d034e18a235bd995b0d6352"
        area_code:
          type: string
          example: "21"
        country_code:
          type: string
          example: "55"
        number:
          type: string
          example: "33093829"
        main:
          type: string
          example: True
        _links:
          $ref: '#/components/schemas/LinksPhones'
    PhonesHoldersResponse:
      type: object
      properties:
        _embedded:
           type: object
           properties:
             phones:
               type: array
               items:
                 $ref: '#/components/schemas/AddressHolderResponse'
        page: 
          type: object
          properties:
            size:
              type: number
              example: 20
            total_elements:
              type: number
              example: 1
            total_pages:
              type: number
              example: 1
            number:
              type: number
              example: 0
    AddressHolderRequest:
      required:
        - street
        - number
        - complement
        - state
        - neighborhood
        - postal_code
        - country
      type: object
      properties:
        street:
          type: string
          example: "Av das Américas"
          description: Logradouro do endereço 
        number:
          type: string
          description: Número do endereço.
          example: "100" 
        city:
          type: string
          description: Cidade
          example: "Rio de Janeiro" 
        complement:
          type: string
          description: Complemento do endereço
          example: "Do lado Citta América" 
        state:
          type: string
          description: Estado
          example: "Rio de Janeiro" 
        neighborhood:
          type: string
          description: Bairro
          example: "Barra da Tijuca" 
        postal_code:
          type: string
          description: CEP
          example: "22783450" 
        country:
          type: string
          description: Pais do endereço
          example: "Brasil" 
    DocumentsHolderResponse:
      required:
        - street
        - number
        - complement
        - state
        - postal_code
        - country
      type: object
      properties:
        id:
          type: string
          example: "85b006901d034e18a235bd995b0d6353"
        street:
          type: string
          example: "SELFIE"
          description: Tipo do documento cadastrado 
        format:
          type: string
          description: Formato do docuemento cadastrado.
          example: "jpeg" 
        size:
          type: string
          description: Tamanho do arquivo cadastrado
          example: "1000000" 
        _links:
          $ref: '#/components/schemas/LinksDocs'
    HolderResponse:
      type: object
      properties:
        _embedded:
           type: object
           properties:
             holders:
               type: array
               items:
                 $ref: '#/components/schemas/IndividualHolderResponse'
        page: 
          type: object
          properties:
            size:
              type: number
              example: 20
            total_elements:
              type: number
              example: 1
            total_pages:
              type: number
              example: 1
            number:
              type: number
              example: 0
    AddressHoldersResponse:
      type: object
      properties:
        _embedded:
           type: object
           properties:
             addresses:
               type: array
               items:
                 $ref: '#/components/schemas/AddressHolderResponse'
        page: 
          type: object
          properties:
            size:
              type: number
              example: 20
            total_elements:
              type: number
              example: 1
            total_pages:
              type: number
              example: 1
            number:
              type: number
              example: 0
    AddressHolderResponse:
      type: object
      properties:
         id:
           type: string
           example: "85b006901d034e18a235bd995b0d6352"
         street:
           type: string
           example: "Av das Américas"
           description: Logradouro do endereço 
         number:
           type: string
           description: Número do endereço.
           example: "100" 
         city:
           type: string
           description: Cidade
           example: "Rio de Janeiro" 
         complement:
           type: string
           description: Complemento do endereço
           example: "Do lado Citta América" 
         state:
           type: string
           description: Estado
           example: "Rio de Janeiro" 
         postal_code:
           type: string
           description: CEP
           example: "22783450" 
         country:
           type: string
           description: Pais do endereço
           example: "Brasil" 
         _links:
           $ref: '#/components/schemas/LinksPhones'
    IndividualHolderPartnerRequest:
      required:
        - admin
        - percentage
        - cbo
        - email
        - name
        - revenue
        - type
        - mothers_name
        - national_registration
      type: object
      properties:
        type:
          type: string
          example: "individual"
          description: Tipo do portador da conta. Para um holder pessoa física o valor deve ser sempre individual 
        admin:
          type: boolean
          description: Indica se o sócio é o administrador da empresa.
          example: true 
        percentage:
          type: number
          description: Indica o percentual de controle da empresa pelo sócio.
          example: 100 
        name:
          type: string
          description: Nome completo do portador da conta.
          example: "João da Silva" 
        email:
          type: string
          description: email do portador da conta.
          example: "joao.silva@gmail.com" 
        birthday:
          type: string
          description: Data de nascimento do portador da conta.
          example: "1982-12-15" 
        identity_card:
          type: string
          description: RG do portador da conta (Somente para type "individual") 
          example: 156032898
        national_registration:
          type: string
          description: CPF do portador da conta.
          example: "10057698007" 
        cbo:
          type: string
          description: Código de ocupação do portador da conta. Valor disponível em Listar CBO (Somente para type "individual")
          example: "252505"
        pep:
          type: boolean
          default: false
          description: Declaração se o portador da conta é uma pessoa exposta politicamente. 
        mothers_name:
          type: string
          description: Nome da mãe do portador da conta 
          example: "Maria Silva"
        revenue:
          type: number
          description: Renda média do portador (tipo individual) da conta ou receita média da empresa (tipo business) 
          format: double
          example: "5500.00" 
    BusinessHolderPartnerRequest:
      required:
        - admin
        - percentage
        - cbo
        - email
        - name
        - revenue
        - type
        - mothers_name
        - national_registration
      type: object
      properties:
        type:
          type: string
          example: "business"
          description: Tipo do portador da conta. Para um holder pessoa física o valor deve ser sempre individual 
        admin:
          type: boolean
          description: Indica se o sócio é o administrador da empresa.
          example: true 
        percentage:
          type: number
          description: Indica o percentual de controle da empresa pelo sócio.
          example: 100 
        owner:
          type: string
          description: ID do sócio. Só preencher caso o portador seja um PJ que tenha como sócio outro PJ e esse sócio tenha como sócio uma PF.
        name:
          type: string
          description: Nome completo do portador da conta.
          example: "China in Box" 
        email:
          type: string
          description: email do portador da conta.
          example: "joao.silva@gmail.com" 
        birthday:
          type: string
          description: Data de nascimento do portador da conta.
          example: "1982-12-15" 
        identity_card:
          type: string
          description: RG do portador da conta (Somente para type "individual") 
          example: 156032898
        national_registration:
          type: string
          description: CNPJ do portador da conta.
          example: "67053773000107" 
        cbo:
          type: string
          description: Código de ocupação do portador da conta. Valor disponível em Listar CBO (Somente para type "individual")
          example: "252505"
        pep:
          type: boolean
          default: false
          description: Declaração se o portador da conta é uma pessoa exposta politicamente. 
        mothers_name:
          type: string
          description: Nome da mãe do portador da conta 
          example: "Maria Silva"
        revenue:
          type: number
          description: Renda média do portador (tipo individual) da conta ou receita média da empresa (tipo business) 
          format: double
          example: "5500.00" 
    IndividualHolderPartnerResponse:
      type: object
      properties:
        type:
          type: string
          example: individual
        id:
          type: string
          example: "85b006901d034e18a235bd995b0d6352"
        name:
          type: string
          example: "João Silva"
        revenue:
          type: number
          format: double
          example: 5500.50
        email:
          type: string
          example: "joao.silva@gmail.com"
        nationalRegistration:
          type: string
          example: "10057698007"
        birthday:
          type: string
          example: "1982-12-15"
        mothers_name:
          type: string
          example: "Maria da Silva"
        identity_card:
          type: string
          example: "156032898"
        pep:
          type: string
          example: "false"
        cbo:
          type: string
          example: "252505"
        _links:
          $ref: '#/components/schemas/LinksPartners'
    BusinessHolderPartnerResponse:
      type: object
      properties:
        id:
          type: string
          example: "85b006901d034e18a235bd995b0d6352"
        name:
          type: string
          example: "João Silva"
        revenue:
          type: number
          format: double
          example: 5500.50
        email:
          type: string
          example: "joao.silva@gmail.com"
        status:
          type: string
          example: waiting_info_and_documents
        marketplace_id:
          type: string
          example: "f8c2bfb884e4486c8e0eee15be5c3ab1"
        marketplace_name:
          type: string
          example: "Marketplace Integração Testes Banking"
        created_at:
          type: string
          example: "2020-11-05T11:35:32.038494"
        updated_at:
          type: string
          example: "2020-11-05T11:35:32.038497"
        type:
          type: string
          example: individual
        nationalRegistration:
          type: string
          example: "10057698007"
        birthday:
          type: string
          example: "1982-12-15"
        mothers_name:
          type: string
          example: "Maria da Silva"
        identity_card:
          type: string
          example: "156032898"
        pep:
          type: string
          example: "false"
        cbo:
          type: string
          example: "252505"
        cnae:
          type: string
          description: Código de classificação nacional de atividades econômicas
          example: "0111301"
        legal_name:
          type: string
          description: Razão social da empresa (somente tipo business)
          example: "Teste Comercio de Alimentos Ltda." 
        establishment:
          type: object
          properties:
            format: 
              type: string
              example: "LTDA"
            date:
              type: string
              example: "2001-03-05"     
        _links:
           $ref: '#/components/schemas/LinksPartnersBusiness'
    PartnerResponse:
      type: object
      properties:
        _embedded:
           type: object
           properties:
             partners:
               type: array
               items:
                 $ref: '#/components/schemas/IndividualHolderPartnerResponse'
        page: 
          type: object
          properties:
            size:
              type: number
              example: 20
            total_elements:
              type: number
              example: 1
            total_pages:
              type: number
              example: 1
            number:
              type: number
              example: 0
    PhonesPartnerResponse:
      type: object
      properties:
        id:
          type: string
          example: "85b006901d034e18a235bd995b0d6352"
        area_code:
          type: string
          example: "21"
        country_code:
          type: string
          example: "55"
        number:
          type: string
          example: "33093829"
        main:
          type: string
          example: True
        _links:
          $ref: '#/components/schemas/LinksPhonesPartners'
    DocumentsPartnerResponse:
      type: object
      properties:
        id:
          type: string
          example: "85b006901d034e18a235bd995b0d6353"
        street:
          type: string
          example: "SELFIE"
          description: Tipo do documento cadastrado 
        format:
          type: string
          description: Formato do docuemento cadastrado.
          example: "jpeg" 
        size:
          type: string
          description: Tamanho do arquivo cadastrado
          example: "1000000" 
        _links:
          $ref: '#/components/schemas/LinksDocs'
    DigitalAccountResponse:
      type: object
      properties:
        id:
          type: string
          example: "942e0d178dd64644b2eb054705268c94"
        holder:
          type: string
          example: "803b1b5a52894201b2a034caaf3f2cce"
        balance:
          type: string
          example: "0.00"
        currency:
          type: string
          example: "BRL"
        routing_number:
          type: string
          example: "001"
        number:
          type: string
          example: "80428948"
        status:
          type: string
          example: "active"
        metadata:
          type: string
          example: "{}"
        created_at:
          type: string
          example: "2020-11-05T11:35:32.038494"
        updated_at:
          type: string
          example: "2020-11-05T11:35:32.038497"
        primary:
          type: boolean
          example: true
        uri:
          type: string
          example: "/v2/marketplaces/303102c1161c450f94d72b30f9903f89/accounts/942e0d178dd64644b2eb054705268c94"
        resource:
          type: string
          example: "payment_account"
    AccountHolderRequest:
      type: object
      properties:
        currency:
          type: string
          example: "BRL"
          default: "BRL"
          description: "moeda (default: BRL)"
        metadata:
          type: string
          description: Metadados associados ao documento dono da conta.
    BalanceAccountResponse:
      type: object
      properties:
        id:
          type: string
          example: "b5f7537b76684ef4b0a4fbf91936219a"
        date:
          type: string
          example: "2019-08-14T18:04:33+00:00"
        amount:
          type: string
          example: "-0.01"
        gross_amount:
          type: string
          example: "-0.01"
        blocked_amount:
          type: string
          example: "0.00"
        current_balance:
          type: string
          example: "2.09"
        resource:
          type: string
          example: "entry"
        nsu:
          type: string
          example: "4"
        fee:
          type: string
          example: "0.00"
        description:
          type: string
          example: "teste de transferência entre contas"
        type:
          type: string
          example: "transfer"
        object_id:
          type: string
          example: "transfer"
        transfer:
          type: object
          properties:
            id:
              type: string
              example: "b5f7537b76684ef4b0a4fbf91936219a"
            authorization_code:
              type: string
              example: "fba84c9292024c9f9b375998a0925b4f"

    MessageNotFound400:
      type: object
      properties:
        status:
          type: string
          example: "bad_request"
        type:
          type: string
          example: "invalid_request"
        message:
          type: string
          example: "Validation field error"
        category:
          type: string
          example: "business"
        status_code:
          type: number
          example: 400
        fields:
          type: object
          properties:
            number: 
              type: string 
              example: "Number is required"
            country_code:
              type: string 
              example: "Country code must have only number characters"
    MessageNotFound404:
      type: object
      properties:
        status:
          type: string
          example: "not_found"
        type:
          type: string
          example: "not_found"
        message:
          type: string
          example: "Holder not found"
        category:
          type: string
          example: "business"
        status_code:
          type: number
          example: 404
    MessageNotFound412:
      type: object
      properties:
        status:
          type: string
          example: "pre_condition_failed"
        type:
          type: string
          example: "invalid_request"
        message:
          type: string
          example: "Holder already approved."
        category:
          type: string
          example: "business"
        status_code:
          type: number
          example: 412
    MessageNotFound500:
      type: object
      properties:
        status:
          type: string
          example: "internal_server_error"
        type:
          type: string
          example: "server_error"
        message:
          type: string
          example: "Intenal Server Error"
        category:
          type: string
          example: "unexpected"
        status_code:
          type: number
          example: 500

    _links:
          $ref: '#/components/schemas/Links'

    Links:
      type: object
      $ref: '#/components/schemas/Link'

    Link:
      type: object
      properties:
        self:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352"
            
            type: 
              type: string
              example: "GET"
        phones:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/phones"
            type: 
              type: string
              example: "GET"
        adresses:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/addresses"
            type: 
              type: string
              example: "GET"        
        documents:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/documents"
            type: 
              type: string
              example: "GET"

    LinksPhones:
      type: object
      $ref: '#/components/schemas/LinkPhone'
    LinkPhone:
      type: object
      properties:
        self:
          type: object
          properties: 
            href: 
              type: string
              example: "https://localhost/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352"
            
            type: 
              type: string
              example: "GET"
        holder:
          type: object
          properties: 
            href: 
              type: string
              example: "https://localhost/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/a391eb48b731455da7b9efe649b822ca"
            
            type: 
              type: string
              example: "GET"
    LinksDocs:
      type: object
      $ref: '#/components/schemas/LinksDoc'
    LinksDoc:
      type: object
      properties:
        self:
          type: object
          properties: 
            href: 
              type: string
              example: "https://localhost/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352"
            
            type: 
              type: string
              example: "GET"
        download:
          type: object
          properties: 
            href: 
              type: string
              example: http://localhost/marketplaces/d4d3fbbbc82d4a999c0a91261664b938/banking/accreditation/holders/88c2d6c89ef24c4c861e2dbafc32336e/documents/88c2d6c89ef24c4c861e2dbafc32336e/download"
            type: 
              type: string
              example: "GET"
        holder:
          type: object
          properties: 
            href: 
              type: string
              example: "https://localhost/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/a391eb48b731455da7b9efe649b822ca"
            type: 
              type: string
              example: "GET"
            
    LinksPartners:
      type: object
      $ref: '#/components/schemas/LinksPartner'

    LinksPartner:
      type: object
      properties:
        self:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352"
            
            type: 
              type: string
              example: "GET"
        phones:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/phones"
            type: 
              type: string
              example: "GET"
        adresses:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/addresses"
            type: 
              type: string
              example: "GET"        
        documents:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/documents"
            type: 
              type: string
              example: "GET"
        holder:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/"
            type: 
              type: string
              example: "GET"

    LinksPartnersBusiness:
      type: object
      $ref: '#/components/schemas/LinksPartnersBusinesses'

    LinksPartnersBusinesses:
      type: object
      properties:
        self:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/partners/0b4a40d89e004b4bba626c50e2dd77f2"
            
            type: 
              type: string
              example: "GET"
        phones:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/partners/0b4a40d89e004b4bba626c50e2dd77f2/phones"
            type: 
              type: string
              example: "GET"
        adresses:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352//partners/0b4a40d89e004b4bba626c50e2dd77f2addresses"
            type: 
              type: string
              example: "GET"        
        documents:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/partners/0b4a40d89e004b4bba626c50e2dd77f2/documents"
            type: 
              type: string
              example: "GET"
        owner:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/"
            type: 
              type: string
              example: "GET"
        holder:
          type: object
          properties: 
            href: 
              type: string
              example: "https://apigw-sandbox.zoop.ws/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/"
            type: 
              type: string
              example: "GET"
         
    LinksPhonesPartners:
      type: object
      $ref: '#/components/schemas/LinksPhonesPartner'
      
    LinksPhonesPartner:
      type: object
      properties:
        self:
          type: object
          properties: 
            href: 
              type: string
              example: "https://localhost/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/85b006901d034e18a235bd995b0d6352/partners/82a2be6013ef4b01aaa8dcb4efcd6a8e/phones/a06f744df0944111b8da58daff18d8c2"
            
            type: 
              type: string
              example: "GET"
        partner:
          type: object
          properties: 
            href: 
              type: string
              example: "https://localhost/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/a391eb48b731455da7b9efe649b822ca/partners/82a2be6013ef4b01aaa8dcb4efcd6a8e"
            type: 
              type: string
              example: "GET"
        holder:
          type: object
          properties: 
            href: 
              type: string
              example: "https://localhost/v2/marketplaces/f8c2bfb884e4486c8e0eee15be5c3ab1/banking/accreditation/holders/a391eb48b731455da7b9efe649b822ca"
            type: 
              type: string
              example: "GET"

